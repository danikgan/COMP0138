/Users/danikgan/Desktop/ant/src/etc/testcases/core/containersrc/test/SpecialSeq.java:30:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/etc/testcases/core/loaderref/src/Task1.java:19:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/javadoc/java/ClassToJavadoc.java:28:	Document empty method body
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/manifestclasspath/Alpha.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/manifestclasspath/Beta.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src1/A.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src1/A.java:18:	Avoid unused private fields such as 'd'.
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src1/B.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src1/C.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src1/D.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src1/E.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src2/A.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src2/A.java:18:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src2/B.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src3/A.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src3/A.java:18:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src3/A.java:19:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src3/B.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src5/A.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src5/A.java:21:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src5/B.java:17:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/depend/src6/org.dummy/Foo.java:20:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/javah/input/org/example/Foo.java:22:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/optional/javah/input/org/example/Foo.java:22:	Document empty constructor
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/rmic/src/AntTimestamp.java:26:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/rmic/src/RemoteTimestamp.java:23:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/taskdefs/rmic/src/RemoteTimestampImpl.java:22:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/types/assertions/AssertionMain.java:24:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/types/assertions/AssertionMain.java:24:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/etc/testcases/types/assertions/AssertionTest.java:24:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/etc/testcases/types/assertions/AssertionTest.java:34:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/etc/testcases/types/assertions/AssertionTest.java:41:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:129:	The method 'hasMoreElements()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:130:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:138:	The method 'nextElement()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:155:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:155:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:160:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:183:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:201:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:208:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:226:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:594:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1264:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1417:	The method 'buildStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1427:	The method 'buildFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1440:	The method 'subBuildFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1453:	The method 'subBuildStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1462:	The method 'targetStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1471:	The method 'targetFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1480:	The method 'taskStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1489:	The method 'taskFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1498:	The method 'messageLogged(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1526:	The method 'close()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntClassLoader.java:1565:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java:221:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java:267:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java:274:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java:277:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java:280:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java:282:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java:319:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java:319:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java:334:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java:368:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/AntTypeDefinition.java:369:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ArgumentProcessorRegistry.java:47:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/BuildException.java:144:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:66:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:69:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:75:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:81:	Avoid using implementation types like 'HashSet'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:165:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:384:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:399:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:423:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:497:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:614:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:667:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:714:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ComponentHelper.java:743:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:73:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:73:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:92:	The method 'setMessageOutputLevel(int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:102:	The method 'setOutputPrintStream(PrintStream)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:112:	The method 'setErrorPrintStream(PrintStream)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:122:	The method 'setEmacsMode(boolean)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:131:	The method 'buildStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:165:	The method 'buildFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:211:	The method 'targetStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:225:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:225:	The method 'targetFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:233:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:233:	The method 'taskStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:241:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:241:	The method 'taskFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:252:	The method 'messageLogged(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DefaultLogger.java:329:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DemuxOutputStream.java:153:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Diagnostics.java:76:	Avoid protected fields in a final class.  Change to private or package access.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Diagnostics.java:99:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Diagnostics.java:276:	Avoid unused method parameters such as 'thrown'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Diagnostics.java:276:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Diagnostics.java:454:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:260:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:263:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:269:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:275:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:278:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:284:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:290:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:296:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:573:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1065:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1099:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1101:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1231:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1241:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1323:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1372:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1491:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1525:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1556:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1573:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1590:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1608:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1639:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1656:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1673:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1688:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1782:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/DirectoryScanner.java:1786:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ExtensionPoint.java:28:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:267:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:293:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:484:	Avoid protected fields in a final class.  Change to private or package access.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:492:	Avoid protected fields in a final class.  Change to private or package access.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1027:	Unnecessary use of fully qualified name 'java.lang.Object' due to existing implicit import 'java.lang.*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1049:	Unnecessary use of fully qualified name 'java.lang.Character' due to existing implicit import 'java.lang.*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1063:	Unnecessary use of fully qualified name 'java.lang.Boolean' due to existing implicit import 'java.lang.*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1074:	Unnecessary use of fully qualified name 'java.lang.Class' due to existing implicit import 'java.lang.*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1088:	Unnecessary use of fully qualified name 'java.io.File' due to existing import 'java.io.File'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1140:	Unnecessary use of fully qualified name 'java.lang.Long' due to existing implicit import 'java.lang.*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1148:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1198:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1230:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1339:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1365:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1515:	Avoid unused method parameters such as 'parent'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java:1706:	Avoid unused method parameters such as 'methods'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/MagicNames.java:29:	The utility class name 'MagicNames' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:89:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:95:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:98:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:202:	The method 'startAnt(String, Properties, ClassLoader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:207:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:235:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:281:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:325:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:325:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:327:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:329:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:331:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:331:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:333:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:333:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:335:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:335:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:337:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:337:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:339:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:341:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:341:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:354:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:358:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:360:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:360:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:361:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:363:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:367:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:369:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:371:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:371:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:373:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:373:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:376:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:376:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:384:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:384:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:386:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:397:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:520:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:534:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:577:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:592:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:606:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:616:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:620:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:853:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:1036:	Avoid unused method parameters such as 'logLevel'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:1074:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:1077:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:1214:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:1245:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:1246:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Main.java:1246:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/NoBannerLogger.java:39:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/NoBannerLogger.java:39:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/NoBannerLogger.java:49:	The method 'targetStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/NoBannerLogger.java:68:	The method 'targetFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/NoBannerLogger.java:81:	The method 'messageLogged(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:144:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:147:	Avoid using implementation types like 'HashMap'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:153:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:157:	Non-static initializers are confusing
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:177:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:271:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:391:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:433:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:645:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:653:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:662:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:815:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1008:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1026:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1068:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1151:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1248:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1251:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1369:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1378:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1395:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1403:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1412:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1719:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1739:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1759:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1759:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1781:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1781:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1803:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1803:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1821:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1831:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1836:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1885:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1886:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1887:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1915:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1921:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1954:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1975:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:1993:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:2043:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:2447:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Project.java:2447:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectComponent.java:57:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectComponent.java:57:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectComponent.java:167:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelper.java:131:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelper.java:153:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelper.java:163:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelper.java:331:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelper.java:454:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelper.java:482:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelper.java:482:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelper.java:695:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelperRepository.java:46:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelperRepository.java:146:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelperRepository.java:224:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/ProjectHelperRepository.java:297:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:173:	This final field could be made static
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:176:	The method 'evaluate(String, PropertyHelper)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:215:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:226:	This final field could be made static
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:238:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:241:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:248:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:255:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:510:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:511:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:537:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:831:	The method 'getProperty(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:840:	Avoid using a branching statement as the last in a loop.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:894:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:911:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:926:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:937:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:946:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:955:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:1022:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:1022:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/PropertyHelper.java:1038:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/RuntimeConfigurable.java:78:	Avoid using implementation types like 'LinkedHashMap'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/RuntimeConfigurable.java:81:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/RuntimeConfigurable.java:200:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/RuntimeConfigurable.java:227:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/RuntimeConfigurable.java:334:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/RuntimeConfigurable.java:492:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Target.java:209:	The method 'addTask(Task)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Target.java:235:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Target.java:445:	This for loop can be replaced by a foreach loop
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Task.java:143:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Task.java:155:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Task.java:278:	The method 'log(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/Task.java:290:	The method 'log(String, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/TaskAdapter.java:40:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/TaskAdapter.java:98:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/TaskAdapter.java:113:	The method 'checkProxyClass(Class)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/TaskAdapter.java:123:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/TaskAdapter.java:130:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/TaskAdapter.java:145:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/TaskAdapter.java:169:	The method 'setProxy(Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/TaskAdapter.java:178:	The method 'getProxy()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/UnknownElement.java:149:	Overriding method merely calls super
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/UnknownElement.java:149:	The method 'getWrapper()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/UnknownElement.java:161:	The method 'maybeConfigure()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/UnknownElement.java:214:	The method 'handleOutput(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/UnknownElement.java:234:	The method 'handleInput(byte, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/UnknownElement.java:247:	The method 'handleFlush(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/UnknownElement.java:260:	The method 'handleErrorOutput(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/UnknownElement.java:273:	The method 'handleErrorFlush(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/UnknownElement.java:285:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/UnknownElement.java:505:	The method 'getTaskName()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/XmlLogger.java:258:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/XmlLogger.java:330:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/XmlLogger.java:447:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/XmlLogger.java:458:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/attribute/IfBlankAttribute.java:30:	Non-static initializers are confusing
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/attribute/IfBlankAttribute.java:36:	The method 'isEnabled(UnknownElement, String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/attribute/IfSetAttribute.java:30:	Non-static initializers are confusing
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/attribute/IfSetAttribute.java:36:	The method 'isEnabled(UnknownElement, String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/attribute/IfTrueAttribute.java:31:	Non-static initializers are confusing
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/attribute/IfTrueAttribute.java:38:	The method 'isEnabled(UnknownElement, String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/dispatch/DispatchUtils.java:31:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/dispatch/DispatchUtils.java:59:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/dispatch/DispatchUtils.java:90:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/dispatch/DispatchUtils.java:107:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/dispatch/DispatchUtils.java:107:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/dispatch/DispatchUtils.java:109:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/BaseFilterReader.java:81:	The method 'read(char, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/BaseFilterReader.java:108:	The method 'skip(long)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/BaseParamFilterReader.java:61:	The method 'setParameters(Parameter...)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ClassConstants.java:88:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ClassConstants.java:125:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ClassConstants.java:150:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ConcatFilter.java:174:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/EscapeUnicode.java:45:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/EscapeUnicode.java:78:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/EscapeUnicode.java:111:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/EscapeUnicode.java:120:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ExpandProperties.java:91:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ExpandProperties.java:128:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:115:	Non-static initializers are confusing
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:139:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:294:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:445:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:449:	The method 'close()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:453:	The method 'reset()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:457:	The method 'markSupported()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:461:	The method 'ready()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:465:	The method 'mark(int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:469:	The method 'skip(long)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:473:	The method 'read(char)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:477:	The method 'read(char, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:487:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:515:	The method 'editsBlocked()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:519:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:522:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:582:	A switch statement does not contain a break
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:631:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:637:	A switch statement does not contain a break
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:665:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:707:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:736:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:760:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:775:	A non-case label was present in a switch statement
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:778:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:839:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:842:	A switch statement does not contain a break
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:876:	The method 'getValues()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:885:	The method 'equals(Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:894:	The method 'hashCode()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:950:	The method 'getValues()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:959:	The method 'equals(Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/FixCrLfFilter.java:967:	The method 'hashCode()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/HeadFilter.java:64:	Perhaps 'linePos' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/HeadFilter.java:102:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/HeadFilter.java:174:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/LineContains.java:72:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/LineContains.java:114:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/LineContains.java:222:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/LineContains.java:235:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/LineContains.java:249:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/LineContainsRegExp.java:61:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/LineContainsRegExp.java:103:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/LineContainsRegExp.java:157:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/LineContainsRegExp.java:171:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/LineContainsRegExp.java:185:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/PrefixLines.java:81:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/PrefixLines.java:143:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ReplaceTokens.java:64:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ReplaceTokens.java:67:	Avoid using implementation types like 'TreeMap'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ReplaceTokens.java:89:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ReplaceTokens.java:112:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ReplaceTokens.java:268:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ReplaceTokens.java:278:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/ReplaceTokens.java:292:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/SortFilter.java:195:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/SortFilter.java:248:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/SortFilter.java:334:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/SortFilter.java:338:	'catch' branch identical to 'InstantiationException | ClassNotFoundException | IllegalAccessException' branch
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/StripJavaComments.java:82:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/StripJavaComments.java:141:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/StripLineBreaks.java:82:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/StripLineBreaks.java:129:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/StripLineComments.java:58:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/StripLineComments.java:93:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/StripLineComments.java:153:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/StripLineComments.java:162:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/StripLineComments.java:176:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/SuffixLines.java:82:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/SuffixLines.java:153:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TabsToSpaces.java:83:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TabsToSpaces.java:132:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TailFilter.java:67:	Perhaps 'linePos' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TailFilter.java:69:	Avoid using implementation types like 'LinkedList'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TailFilter.java:105:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TailFilter.java:174:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TailFilter.java:236:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:61:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:69:	Perhaps 'linePos' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:103:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:144:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:328:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:369:	The method 'filter(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:423:	The method 'filter(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:491:	The method 'filter(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:560:	The method 'filter(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:579:	The method 'filter(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:592:	The method 'filter(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:622:	The method 'filter(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:640:	The method 'chain(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/TokenFilter.java:645:	The method 'read()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/UniqFilter.java:33:	The method 'filter(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java:98:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java:108:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java:192:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java:324:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/filters/util/JavaClassHelper.java:32:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/AntXMLContext.java:56:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/AntXMLContext.java:94:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/AntXMLContext.java:217:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/AntXMLContext.java:247:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/AntXMLContext.java:256:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/AntXMLContext.java:305:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/DefaultExecutor.java:36:	The method 'executeTargets(Project, String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/DefaultExecutor.java:56:	The method 'getSubProjectExecutor()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/IgnoreDependenciesExecutor.java:41:	The method 'executeTargets(Project, String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/IgnoreDependenciesExecutor.java:66:	The method 'getSubProjectExecutor()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelper2.java:291:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelper2.java:403:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelper2.java:439:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelper2.java:449:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelper2.java:479:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelper2.java:831:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelper2.java:949:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelper2.java:1007:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelper2.java:1112:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelper2.java:1112:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelper2.java:1184:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:110:	The method 'parse(Project, Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:150:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:152:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:158:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:231:	The method 'startElement(String, AttributeList)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:247:	The method 'characters(char, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:266:	The method 'endElement(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:293:	The method 'resolveEntity(String, String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:332:	The method 'startElement(String, AttributeList)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:347:	The method 'setDocumentLocator(Locator)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:434:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:462:	The method 'startElement(String, AttributeList)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:599:	The method 'startElement(String, AttributeList)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:649:	The method 'characters(char, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:737:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:768:	The method 'characters(char, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:785:	The method 'startElement(String, AttributeList)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:903:	The method 'characters(char, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:920:	The method 'startElement(String, AttributeList)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:1002:	The method 'characters(char, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java:1018:	The method 'startElement(String, AttributeList)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/SingleCheckExecutor.java:34:	The method 'executeTargets(Project, String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/helper/SingleCheckExecutor.java:41:	The method 'getSubProjectExecutor()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/DefaultInputHandler.java:39:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/DefaultInputHandler.java:39:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/DefaultInputHandler.java:48:	The method 'handleInput(InputRequest)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/GreedyInputHandler.java:38:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/GreedyInputHandler.java:38:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/GreedyInputHandler.java:47:	The method 'handleInput(InputRequest)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/MultipleChoiceInputRequest.java:31:	Avoid using implementation types like 'LinkedHashSet'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/MultipleChoiceInputRequest.java:40:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/MultipleChoiceInputRequest.java:60:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/MultipleChoiceInputRequest.java:70:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/PropertyFileInputHandler.java:45:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/PropertyFileInputHandler.java:45:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/PropertyFileInputHandler.java:55:	The method 'handleInput(InputRequest)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/SecureInputHandler.java:33:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/SecureInputHandler.java:33:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/input/SecureInputHandler.java:42:	The method 'handleInput(InputRequest)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/launch/Launcher.java:33:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/launch/Launcher.java:106:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/launch/Launcher.java:248:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/launch/Launcher.java:296:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/launch/Launcher.java:330:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/launch/Locator.java:49:	The utility class name 'Locator' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/launch/Locator.java:142:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/launch/Locator.java:221:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/launch/Locator.java:233:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/launch/Locator.java:256:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/launch/Locator.java:411:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/AnsiColorLogger.java:195:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/BigProjectLogger.java:35:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/BigProjectLogger.java:57:	The method 'getBuildFailedMessage()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/BigProjectLogger.java:68:	The method 'getBuildSuccessfulMessage()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/BigProjectLogger.java:77:	The method 'targetStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/BigProjectLogger.java:87:	The method 'taskStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/BigProjectLogger.java:97:	The method 'buildFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/BigProjectLogger.java:108:	The method 'messageLogged(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/BigProjectLogger.java:119:	The method 'subBuildStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/BigProjectLogger.java:146:	The method 'subBuildFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java:74:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java:74:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/Log4jListener.java:82:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/Log4jListener.java:94:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/Log4jListener.java:96:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/Log4jListener.java:109:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/Log4jListener.java:121:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/Log4jListener.java:123:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/MailLogger.java:101:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/MailLogger.java:124:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/MailLogger.java:134:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/MailLogger.java:166:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/listener/MailLogger.java:427:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/loader/AntClassLoader2.java:33:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/loader/AntClassLoader2.java:33:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/property/LocalProperties.java:28:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java:367:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java:374:	'catch' branch identical to 'IOException' branch
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AbstractJarSignerTask.java:95:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AbstractJarSignerTask.java:127:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AbstractJarSignerTask.java:449:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Ant.java:576:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Ant.java:589:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Ant.java:621:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Ant.java:788:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AntStructure.java:133:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AntStructure.java:134:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AntStructure.java:166:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AntStructure.java:260:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AttributeNamespaceDef.java:39:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AugmentReference.java:36:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AugmentReference.java:36:	The method 'checkProxyClass(Class)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AugmentReference.java:42:	The method 'getProxy()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AugmentReference.java:58:	The method 'setProxy(Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/AugmentReference.java:79:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Available.java:242:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/BUnzip2.java:52:	The method 'getDefaultExtension()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/BUnzip2.java:59:	The method 'extract()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/BUnzip2.java:110:	The method 'supportsNonFileResources()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/BZip2.java:43:	The method 'pack()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/BZip2.java:71:	The method 'supportsNonFileResources()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/BindTargets.java:48:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CVSPass.java:131:	Unnecessary modifier 'final' on method 'mangle': private methods cannot be overridden
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CallTarget.java:84:	The method 'init()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CallTarget.java:94:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CallTarget.java:178:	The method 'handleOutput(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CallTarget.java:200:	The method 'handleInput(byte, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CallTarget.java:216:	The method 'handleFlush(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CallTarget.java:233:	The method 'handleErrorOutput(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CallTarget.java:249:	The method 'handleErrorFlush(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Checksum.java:141:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Checksum.java:427:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Checksum.java:485:	Avoid empty while statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Checksum.java:606:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Checksum.java:653:	Avoid using implementation types like 'HashMap'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Classloader.java:202:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CloseResources.java:46:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CloseResources.java:53:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Concat.java:462:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Concat.java:471:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:81:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:83:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:94:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:95:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:96:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:101:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:102:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:210:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:219:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:580:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:627:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:665:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:773:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:782:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:827:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:893:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copy.java:977:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CopyPath.java:67:	Perhaps 'granularity' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/CopyPath.java:168:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copydir.java:125:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copydir.java:157:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Copyfile.java:112:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Cvs.java:39:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Cvs.java:39:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/DefBase.java:158:	Overriding method merely calls super
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/DefBase.java:158:	The method 'init()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Definer.java:81:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Definer.java:133:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Definer.java:606:	A switch statement does not contain a break
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Delete.java:118:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Delete.java:780:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Delete.java:885:	Consider simply returning the value vs storing it in local variable 'targetFileExists'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Deltree.java:54:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/DependSet.java:223:	Avoid unused method parameters such as 'src'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/DependSet.java:223:	Avoid unused method parameters such as 'target'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/DiagnosticsTask.java:37:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Echo.java:62:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/EchoXML.java:110:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Exec.java:278:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecTask.java:86:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecTask.java:708:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Execute.java:126:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Execute.java:177:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Execute.java:190:	Return an empty array rather than null.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Execute.java:245:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Execute.java:251:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Execute.java:338:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Execute.java:422:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Execute.java:575:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Execute.java:663:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Execute.java:693:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java:54:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java:55:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java:101:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java:141:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java:193:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java:224:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java:329:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java:67:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java:272:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java:505:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java:542:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java:559:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java:673:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java:687:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java:688:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java:690:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java:691:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteWatchdog.java:48:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ExecuteWatchdog.java:54:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Exit.java:64:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Exit.java:137:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Exit.java:138:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Exit.java:234:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/FixCRLF.java:99:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/FixCRLF.java:406:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/FixCRLF.java:407:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/FixCRLF.java:410:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/FixCRLF.java:424:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/FixCRLF.java:504:	Avoid empty while statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/GenerateKey.java:279:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/GenerateKey.java:293:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Get.java:567:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Get.java:575:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Get.java:582:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Get.java:618:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Get.java:696:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Get.java:791:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/HostInfo.java:46:	Do not hard code the IP address 
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/HostInfo.java:48:	Do not hard code the IP address 
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/HostInfo.java:50:	Do not hard code the IP address 
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/HostInfo.java:173:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/HostInfo.java:186:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ImportTask.java:274:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JDBCTask.java:100:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JDBCTask.java:269:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JDBCTask.java:302:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Jar.java:715:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Jar.java:796:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Jar.java:1138:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Java.java:84:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Java.java:251:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Java.java:989:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Javac.java:1550:	A switch statement does not contain a break
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Javac.java:1590:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Javac.java:1622:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Javadoc.java:338:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Javadoc.java:1326:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Javadoc.java:1453:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Javadoc.java:2233:	Unnecessary modifier 'final' on resource specification 'in': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Javadoc.java:2293:	Avoid unused method parameters such as 'tmpList'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Javadoc.java:2478:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Javadoc.java:2479:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Javadoc.java:2568:	Unnecessary modifier 'final' on resource specification 'w': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java:58:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java:58:	The method 'setProcessInputStream(OutputStream)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java:65:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java:65:	The method 'setProcessErrorStream(InputStream)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java:73:	The method 'setProcessOutputStream(InputStream)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java:81:	The method 'start()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java:88:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java:88:	The method 'stop()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java:135:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java:172:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java:174:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/KeySubst.java:51:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/KeySubst.java:57:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/KeySubst.java:170:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Length.java:177:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Local.java:41:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java:75:	The method 'processBuffer()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java:80:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java:89:	The method 'processLine(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/MacroDef.java:291:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Manifest.java:134:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Manifest.java:144:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Manifest.java:485:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Manifest.java:676:	Object clone() should be implemented with super.clone()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Manifest.java:676:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Manifest.java:676:	clone() method should be implemented only if implementing Cloneable interface
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Manifest.java:676:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Manifest.java:987:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/MatchingTask.java:129:	The instance method name 'XsetItems' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/MatchingTask.java:162:	The instance method name 'XsetIgnore' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Move.java:85:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Move.java:86:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Move.java:235:	Avoid unused method parameters such as 'overwrite'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Parallel.java:72:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Parallel.java:87:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Parallel.java:102:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Parallel.java:133:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Parallel.java:268:	Avoid using java.lang.ThreadGroup; it is not thread safe
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Parallel.java:275:	Avoid empty synchronized blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Parallel.java:434:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Parallel.java:455:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PathConvert.java:144:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PathConvert.java:146:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PathConvert.java:423:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PreSetDef.java:269:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PreSetDef.java:284:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/ProcessDestroyer.java:85:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java:107:	The method 'setProcessOutputStream(InputStream)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java:116:	The method 'setProcessErrorStream(InputStream)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java:125:	The method 'setProcessInputStream(OutputStream)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java:136:	The method 'start()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java:145:	The method 'stop()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java:150:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java:155:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:80:	The method 'init()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:117:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:146:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:184:	The method 'getValues()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:231:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:231:	The method 'buildStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:239:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:239:	The method 'subBuildStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:247:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:247:	The method 'targetStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:255:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:255:	The method 'targetFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:263:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:263:	The method 'taskStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:271:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:271:	The method 'taskFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:279:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:279:	The method 'messageLogged(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:287:	The method 'buildFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Recorder.java:297:	The method 'subBuildFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:95:	The method 'buildStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:103:	The method 'buildFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:128:	The method 'subBuildFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:141:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:141:	The method 'subBuildStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:148:	The method 'targetStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:158:	The method 'targetFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:171:	The method 'taskStarted(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:179:	The method 'taskFinished(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:188:	The method 'messageLogged(BuildEvent)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:219:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:234:	The method 'setMessageOutputLevel(int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:244:	The method 'setOutputPrintStream(PrintStream)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:254:	The method 'setEmacsMode(boolean)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java:263:	The method 'setErrorPrintStream(PrintStream)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:162:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:165:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:168:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:183:	Avoid using java.lang.ThreadGroup; it is not thread safe
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:501:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:513:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:525:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:575:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:575:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:587:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:617:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:617:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:629:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:678:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:699:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:721:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:748:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Redirector.java:938:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Rename.java:75:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Replace.java:93:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Replace.java:137:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Replace.java:138:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Replace.java:355:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Replace.java:420:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Replace.java:628:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Replace.java:669:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Retry.java:93:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Rmic.java:130:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Rmic.java:409:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Rmic.java:488:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Rmic.java:782:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/SQLExec.java:90:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/SQLExec.java:709:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/SQLExec.java:791:	Ensure that resources like this ResultSet object are closed after use
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/SQLExec.java:797:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/SQLExec.java:910:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/SQLExec.java:933:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/SQLExec.java:1072:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/SQLExec.java:1074:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Sleep.java:70:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Sleep.java:70:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Sleep.java:139:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/StreamPumper.java:39:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/StreamPumper.java:40:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/SubAnt.java:237:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/SubAnt.java:314:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Sync.java:159:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Sync.java:529:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Tar.java:113:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Tar.java:663:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/TaskOutputStream.java:45:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/TaskOutputStream.java:74:	The method 'write(int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Touch.java:257:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Touch.java:257:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Touch.java:326:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Touch.java:355:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Touch.java:355:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Truncate.java:117:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/VerifyJar.java:228:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/War.java:151:	Overriding method merely calls super
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java:223:	Perhaps 'xpathFactory' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java:942:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java:1599:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java:1648:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java:1652:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java:1671:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/XmlProperty.java:278:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/XmlProperty.java:315:	Unnecessary use of fully qualified name 'org.w3c.dom.Node' due to existing import 'org.w3c.dom.Node'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/XmlProperty.java:465:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:102:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:115:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:668:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:807:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:855:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1076:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1078:	Unnecessary modifier 'final' on resource specification 'is': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1086:	Unnecessary modifier 'final' on resource specification 'is': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1142:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1160:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1170:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1260:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1264:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1444:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1531:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1607:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1637:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:1900:	Unnecessary modifier 'final' on resource specification 'bIn': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:2170:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/Zip.java:2230:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory.java:169:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java:722:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java:734:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java:824:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java:825:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java:826:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java:827:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/Javac12.java:49:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/Javac12.java:65:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/Javac12.java:75:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/Javac13.java:61:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/JavacExternal.java:86:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java:72:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/AntVersion.java:87:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/AntVersion.java:96:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/Contains.java:31:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/Contains.java:75:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/Contains.java:75:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/Equals.java:31:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/Equals.java:124:	The method 'eval()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/Equals.java:128:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/FilesMatch.java:43:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/HasMethod.java:134:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/HasMethod.java:137:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/HasMethod.java:160:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/IsFailure.java:50:	The method 'eval()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/IsFalse.java:47:	The method 'eval()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/IsFileSelected.java:56:	The method 'validate()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/IsFileSelected.java:67:	The method 'eval()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/IsReachable.java:186:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/IsSigned.java:80:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/IsSigned.java:86:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/JavaVersion.java:63:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/JavaVersion.java:72:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/Matches.java:107:	The method 'eval()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/Os.java:267:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/Os.java:292:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/Os.java:302:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/ResourceContains.java:154:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/ResourceContains.java:155:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/ResourceContains.java:159:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/condition/ResourceExists.java:54:	The method 'eval()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/cvslib/CVSEntry.java:31:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/cvslib/CVSEntry.java:100:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogParser.java:88:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogParser.java:280:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogParser.java:280:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogTask.java:400:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogTask.java:424:	Unnecessary modifier 'final' on resource specification 'writer': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/cvslib/CvsTagDiff.java:332:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailAddress.java:31:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailAddress.java:126:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailAddress.java:127:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailAddress.java:133:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java:85:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java:87:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java:89:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java:91:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java:94:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java:453:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java:471:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java:471:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java:483:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java:496:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:43:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:44:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:45:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:46:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:47:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:51:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:163:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:172:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:181:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:190:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:199:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Mailer.java:235:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Message.java:41:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Message.java:48:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/Message.java:135:	Avoid empty finally blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java:157:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java:286:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java:297:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java:205:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java:293:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java:158:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java:174:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java:194:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java:205:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java:289:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java:333:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/EchoProperties.java:345:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/Javah.java:84:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java:321:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java:325:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:148:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:149:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:550:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:554:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:557:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:560:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:563:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:566:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:569:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:573:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:576:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:579:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:582:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:585:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:588:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:591:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:595:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:598:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:601:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:604:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:607:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:610:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:613:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:616:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:619:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:622:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:625:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:628:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:631:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:634:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:637:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:640:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:643:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:646:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:696:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:812:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java:908:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java:149:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java:212:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java:428:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java:441:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java:469:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java:480:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java:701:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/RenameExtensions.java:107:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/SchemaValidate.java:482:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/Script.java:42:	The method 'setProject(Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/Script.java:52:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:124:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:127:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:153:	The method 'setStylesheet(File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:165:	The method 'setStylesheet(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:172:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:185:	The method 'transform(File, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:508:	The method 'addParam(String, String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:518:	The method 'addParam(String, Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:526:	The method 'setLogger(XSLTLogger)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:534:	The method 'error(TransformerException)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:542:	The method 'fatalError(TransformerException)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:551:	The method 'warning(TransformerException)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:616:	The method 'configure(XSLTProcess)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java:648:	The final local variable name '_isNotSecureProcessing' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:77:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:93:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:98:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:248:	The method 'init()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:288:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:367:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:547:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:602:	The method 'fatalError(SAXParseException)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:610:	The method 'error(SAXParseException)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:618:	The method 'warning(SAXParseException)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:638:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:647:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java:647:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ccm/CCMCheck.java:53:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ccm/CCMCreateTask.java:265:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ccm/CCMCreateTask.java:272:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ccm/CCMCreateTask.java:281:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ccm/CCMCreateTask.java:322:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/clearcase/ClearCase.java:164:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/depend/AntAnalyzer.java:90:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/depend/ClassFile.java:89:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/depend/ClassFileIterator.java:41:	Non-static initializers are confusing
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/depend/ClassFileUtils.java:28:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java:400:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/depend/DirectoryIterator.java:67:	Avoid unused constructor parameters such as 'changeInto'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/depend/JarFileIterator.java:83:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java:351:	Unnecessary use of fully qualified name 'org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient' due to existing same package import 'org.apache.tools.ant.taskdefs.optional.ejb.*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java:494:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java:499:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java:504:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/DescriptorHandler.java:101:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/DescriptorHandler.java:173:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/DescriptorHandler.java:200:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/DescriptorHandler.java:222:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/DescriptorHandler.java:237:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/DescriptorHandler.java:357:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java:110:	Avoid using implementation types like 'ArrayList'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java:501:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java:521:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java:626:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java:656:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java:718:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java:821:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetDeploymentTool.java:109:	Perhaps 'displayName' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetDeploymentTool.java:203:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java:116:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java:215:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java:542:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java:957:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java:1089:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java:1239:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/JbossDeploymentTool.java:104:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java:107:	Perhaps 'jonasDescriptorName' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java:528:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java:807:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/OrionDeploymentTool.java:48:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java:633:	Overriding method merely calls super
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ejb/WebsphereDeploymentTool.java:371:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/extension/Extension.java:323:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/extension/Extension.java:339:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/extension/Extension.java:470:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/extension/Extension.java:545:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/extension/ExtensionSet.java:103:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/extension/ExtensionUtil.java:52:	Avoid using implementation types like 'ArrayList'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/extension/ExtensionUtil.java:103:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/extension/Specification.java:235:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java:162:	Perhaps 'srcLastModified' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java:167:	Perhaps 'destLastModified' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java:172:	Perhaps 'loaded' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java:410:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java:461:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java:503:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java:518:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/image/Image.java:64:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/image/Image.java:66:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/image/Image.java:265:	Do not explicitly trigger a garbage collection.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/image/Image.java:372:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/image/ImageIOTask.java:249:	Do not explicitly trigger a garbage collection.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/image/ImageIOTask.java:363:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/javah/Gcjh.java:39:	The method 'compile(Javah)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/javah/JavahAdapterFactory.java:33:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/javah/JavahAdapterFactory.java:85:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/javah/JavahAdapterFactory.java:89:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/javah/Kaffeh.java:44:	The method 'compile(Javah)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java:93:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java:454:	Unnecessary use of fully qualified name 'jdepend.textui.JDepend' due to existing import 'jdepend.textui.JDepend'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java:459:	Unnecessary use of fully qualified name 'jdepend.textui.JDepend' due to existing import 'jdepend.textui.JDepend'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java:471:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java:499:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java:513:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jlink/ClassNameReader.java:34:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jlink/ClassNameReader.java:107:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jlink/ClassNameReader.java:107:	The utility class name 'ClassNameReader' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jlink/jlink.java:45:	The class name 'jlink' doesn't match '[A-Z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jlink/jlink.java:285:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jlink/jlink.java:364:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jsp/Jasper41Mangler.java:71:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java:82:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java:83:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java:415:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/DefaultJspCompilerAdapter.java:46:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java:95:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JspCompilerAdapterFactory.java:114:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java:129:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/BaseTest.java:36:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java:112:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java:175:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java:190:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java:198:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/Constants.java:24:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/Constants.java:24:	The utility class name 'Constants' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/CustomJUnit4TestAdapterCache.java:36:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/Enumerations.java:32:	The utility class name 'Enumerations' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:166:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:210:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:218:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:226:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:234:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:242:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:400:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:408:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:416:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:424:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:432:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java:453:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java:132:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java:307:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java:326:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java:337:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/IgnoredTestResult.java:40:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:158:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:195:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:937:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:937:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:1289:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:1383:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:1391:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:1912:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:2078:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:2080:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:2082:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:2084:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:2211:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java:2212:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskMirrorImpl.java:39:	Perhaps 'task' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:64:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:78:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:145:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:157:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:209:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:312:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:328:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:337:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:473:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:504:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:517:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java:517:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:97:	Possible unsafe assignment to a non-final static field in a constructor.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:111:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:320:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:393:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:402:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:419:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:419:	Unnecessary use of fully qualified name 'junit.framework.TestCase' due to existing import 'junit.framework.TestCase'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:471:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:516:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:563:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:606:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:612:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:789:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:987:	Unnecessary modifier 'final' on resource specification 'reader': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1017:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1018:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1020:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1020:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1049:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1056:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1060:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1064:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1068:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1072:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1076:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1080:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1084:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java:1228:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitVersionHelper.java:34:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitVersionHelper.java:91:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitVersionHelper.java:107:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitVersionHelper.java:163:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java:97:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java:104:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java:111:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java:130:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:67:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:71:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:75:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:79:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:83:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:87:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:91:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:95:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:107:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:114:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:129:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:142:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:146:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/TearDownOnVmCrash.java:149:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:71:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:74:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:77:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:80:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:83:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:86:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:89:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:92:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:95:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:98:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:101:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:104:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:107:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:109:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:112:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:115:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:118:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:121:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:124:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:127:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:130:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:135:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLConstants.java:140:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java:87:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java:172:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java:203:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLResultAggregator.java:63:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLResultAggregator.java:71:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/AbstractJUnitResultFormatter.java:170:	Unnecessary modifier 'final' on resource specification 'reader': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/AbstractJUnitResultFormatter.java:186:	Useless qualified this usage in the same class.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/AbstractJUnitResultFormatter.java:211:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LauncherSupport.java:139:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LauncherSupport.java:144:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LauncherSupport.java:149:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LauncherSupport.java:230:	Unnecessary use of fully qualified name 'java.nio.file.Path' due to existing import 'java.nio.file.Path'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LauncherSupport.java:463:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LauncherSupport.java:502:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LauncherSupport.java:547:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyPlainResultFormatter.java:46:	Perhaps 'outputStream' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyPlainResultFormatter.java:198:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyPlainResultFormatter.java:225:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java:116:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java:316:	Unnecessary modifier 'final' on resource specification 'reader': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java:327:	Unnecessary modifier 'final' on resource specification 'reader': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/StandaloneLauncher.java:63:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/StandaloneLauncher.java:81:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/StandaloneLauncher.java:88:	Unnecessary modifier 'final' on resource specification 'is': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/StandaloneLauncher.java:111:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/StandaloneLauncher.java:123:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/StandaloneLauncher.java:134:	Unnecessary modifier 'final' on resource specification 'is': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/StandaloneLauncher.java:153:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/StandaloneLauncher.java:181:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/StandaloneLauncher.java:205:	Avoid unused private fields such as 'testExecutionContext'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/TestResultFormatter.java:61:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/TestResultFormatter.java:72:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/Constants.java:24:	The utility class name 'Constants' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/JUnitLauncherClassPathUtil.java:31:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/JUnitLauncherTask.java:79:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/JUnitLauncherTask.java:79:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/JUnitLauncherTask.java:199:	Unnecessary modifier 'final' on resource specification 'os': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/JUnitLauncherTask.java:225:	Unnecessary modifier 'final' on resource specification 'os': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/JUnitLauncherTask.java:260:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/JUnitLauncherTask.java:318:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/JUnitLauncherTask.java:426:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/ListenerDefinition.java:54:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/ListenerDefinition.java:54:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/ListenerDefinition.java:83:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/SingleTestClass.java:45:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/SingleTestClass.java:45:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/TestClasses.java:49:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/TestClasses.java:49:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/TestClasses.java:116:	Unnecessary use of fully qualified name 'Constants.LD_XML_ELM_TEST' due to existing static import 'org.apache.tools.ant.taskdefs.optional.junitlauncher.confined.Constants.LD_XML_ELM_TEST'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/TestClasses.java:139:	Unnecessary use of fully qualified name 'Constants.LD_XML_ELM_TEST' due to existing static import 'org.apache.tools.ant.taskdefs.optional.junitlauncher.confined.Constants.LD_XML_ELM_TEST'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/confined/TestDefinition.java:143:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/native2ascii/DefaultNative2Ascii.java:36:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/native2ascii/DefaultNative2Ascii.java:36:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/native2ascii/KaffeNative2Ascii.java:83:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/native2ascii/Native2AsciiAdapterFactory.java:33:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/native2ascii/Native2AsciiAdapterFactory.java:82:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/native2ascii/Native2AsciiAdapterFactory.java:117:	Unnecessary modifier 'final' on method 'shouldUseKaffe': private methods cannot be overridden
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/native2ascii/SunNative2Ascii.java:64:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:123:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:411:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:590:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:598:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:611:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:820:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:841:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:879:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:1577:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:1720:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:2438:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:2439:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:2476:	Useless qualified this usage in the same class.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:2500:	Useless qualified this usage in the same class.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:2530:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java:2565:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPConfigurator.java:33:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPConfigurator.java:33:	The utility class name 'FTPConfigurator' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java:86:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java:399:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java:602:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java:770:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java:879:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java:305:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java:486:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java:494:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java:507:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java:725:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java:742:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java:1806:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java:1807:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java:1900:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java:369:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java:392:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java:107:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java:128:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java:94:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java:143:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java:287:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java:310:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java:451:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/pvcs/PvcsProject.java:34:	Useless qualified this usage in the same class.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:28:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:30:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:32:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:34:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:36:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:38:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:40:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:42:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:44:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:46:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:50:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:52:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:54:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:56:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:58:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:60:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:62:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:64:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:66:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:68:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:70:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:72:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:74:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:76:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:78:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCmd.java:80:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java:191:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java:216:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java:226:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java:235:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java:245:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java:255:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sound/SoundTask.java:71:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sound/SoundTask.java:71:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sound/SoundTask.java:77:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/sound/SoundTask.java:157:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashTask.java:185:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashTask.java:186:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashTask.java:219:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashTask.java:252:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashTask.java:257:	Avoid empty finally blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashTask.java:264:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/AbstractSshMessage.java:285:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java:95:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java:318:	Unnecessary modifier 'final' on resource specification 'br': resource specifications are implicitly final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java:405:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java:59:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java:61:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java:288:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java:293:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessage.java:79:	Avoid unused constructor parameters such as 'verbose'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessageBySftp.java:43:	Perhaps 'isRecursive' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessageBySftp.java:45:	Perhaps 'verbose' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessageBySftp.java:118:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java:40:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java:41:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java:46:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java:296:	This for loop can be replaced by a foreach loop
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java:299:	This for loop can be replaced by a foreach loop
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessageBySftp.java:239:	This for loop can be replaced by a foreach loop
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessageBySftp.java:242:	This for loop can be replaced by a foreach loop
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/testing/BuildTimeoutException.java:38:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/testing/Funtest.java:87:	Perhaps 'timedTests' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java:319:	Overriding method merely calls super
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java:181:	The method 'execute()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java:521:	Position literals first in String comparisons for EqualsIgnoreCase
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java:523:	Position literals first in String comparisons for EqualsIgnoreCase
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java:613:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java:621:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java:634:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java:769:	The method 'getValues()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java:782:	The method 'getValues()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSADD.java:38:	The method 'buildCmdLine()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSADD.java:74:	The method 'getLocalpath()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKIN.java:36:	The method 'buildCmdLine()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKOUT.java:37:	The method 'buildCmdLine()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSCP.java:36:	The method 'buildCmdLine()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSCREATE.java:35:	The method 'buildCmdLine()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:27:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:29:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:32:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:34:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:36:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:38:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:40:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:42:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:44:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:46:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:49:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:51:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:53:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:55:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:58:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:60:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:62:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:65:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:67:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:69:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:72:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:74:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:76:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:78:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:80:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:82:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:84:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:86:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:88:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:90:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:92:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:94:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:96:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:98:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:100:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:102:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:104:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:106:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:108:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:110:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:112:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:114:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:116:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:118:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:120:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:122:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:124:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants.java:126:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSGET.java:37:	The method 'buildCmdLine()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY.java:39:	The method 'buildCmdLine()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY.java:200:	The method 'getValues()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSLABEL.java:35:	The method 'buildCmdLine()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java:339:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java:392:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java:398:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java:505:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/rmic/KaffeRmic.java:108:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/rmic/SunRmic.java:90:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/rmic/SunRmic.java:93:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/rmic/SunRmic.java:96:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/rmic/WLRmic.java:89:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/taskdefs/rmic/WLRmic.java:91:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/AbstractFileSet.java:638:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/AbstractFileSet.java:916:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/AbstractFileSet.java:916:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/AbstractFileSet.java:918:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/AntFilterReader.java:141:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/AntFilterReader.java:154:	The method 'setRefid(Reference)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/AntFilterReader.java:162:	The method 'dieOnCircularReference(Stack, Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ArchiveFileSet.java:508:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ArchiveFileSet.java:508:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ArchiveFileSet.java:578:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ArchiveFileSet.java:579:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ArchiveScanner.java:108:	The method 'scan()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ArchiveScanner.java:109:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ArchiveScanner.java:156:	The method 'getIncludedFiles()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ArchiveScanner.java:169:	The method 'getIncludedFilesCount()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ArchiveScanner.java:185:	The method 'getIncludedDirectories()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ArchiveScanner.java:198:	The method 'getIncludedDirsCount()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Assertions.java:78:	Avoid using implementation types like 'ArrayList'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Assertions.java:119:	The method 'setRefid(Reference)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Assertions.java:248:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Commandline.java:199:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Commandline.java:375:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Commandline.java:398:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Commandline.java:447:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Commandline.java:540:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Commandline.java:557:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Commandline.java:557:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/CommandlineJava.java:84:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/CommandlineJava.java:100:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/CommandlineJava.java:181:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/CommandlineJava.java:503:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/CommandlineJava.java:742:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Comparison.java:61:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Comparison.java:76:	The method 'getValues()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/DataType.java:357:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/DirSet.java:54:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/DirSet.java:54:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/EnumeratedAttribute.java:55:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/EnumeratedAttribute.java:69:	getInstance method always creates a new object and hence does not comply to Singleton Design Pattern behaviour. Please review
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/EnumeratedAttribute.java:106:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Environment.java:36:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Environment.java:49:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Environment.java:55:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Environment.java:168:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FileList.java:136:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FileList.java:197:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FileSet.java:53:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FileSet.java:53:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterChain.java:49:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterChain.java:69:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSet.java:68:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSet.java:147:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSet.java:176:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSet.java:181:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSet.java:182:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSet.java:191:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSet.java:196:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSet.java:216:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSet.java:247:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSet.java:475:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSet.java:475:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/FilterSetCollection.java:36:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/LogLevel.java:46:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Mapper.java:245:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Path.java:334:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Path.java:423:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Path.java:477:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Path.java:477:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/PatternSet.java:243:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/PatternSet.java:570:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/PatternSet.java:570:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Permissions.java:196:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Permissions.java:351:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/PropertySet.java:111:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Quantifier.java:126:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:88:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:91:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:94:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:179:	The method 'setRefid(Reference)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:304:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:304:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:345:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:345:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:359:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:359:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:371:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:371:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/RedirectorElement.java:581:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Reference.java:40:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Resource.java:72:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Resource.java:250:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Resource.java:259:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Resource.java:259:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Resource.java:263:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/Resource.java:375:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/TarFileSet.java:250:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/TarFileSet.java:250:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/TarFileSet.java:265:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/TarFileSet.java:266:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/TarScanner.java:51:	The method 'fillMapsFromArchive(Resource, String, Map, Map, Map, Map)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/TimeComparison.java:46:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/TimeComparison.java:61:	The method 'getValues()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:127:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:167:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:531:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:640:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:658:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:658:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:681:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:704:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:748:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:776:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:866:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/XMLCatalog.java:1029:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ZipFileSet.java:96:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/ZipFileSet.java:96:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/mappers/CutDirsMapper.java:51:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/mappers/CutDirsMapper.java:59:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/ScriptMapper.java:30:	Avoid using implementation types like 'ArrayList'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/ScriptMapper.java:39:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/ScriptMapper.java:48:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/ScriptMapper.java:89:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/ClassfileSet.java:80:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/ClassfileSet.java:164:	Object clone() should be implemented with super.clone()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/ClassfileSet.java:164:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/ClassfileSet.java:164:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:45:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:50:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:52:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:77:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:88:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:139:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:147:	Return an empty array rather than null.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:156:	Return an empty array rather than null.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:183:	Return an empty array rather than null.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:192:	Return an empty array rather than null.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:201:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:209:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java:217:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/image/ColorMapper.java:27:	The utility class name 'ColorMapper' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/image/ImageOperation.java:30:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/imageio/ColorMapper.java:27:	The utility class name 'ColorMapper' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/optional/xz/XzResource.java:41:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/AbstractClasspathResource.java:139:	The method 'setRefid(Reference)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/AbstractClasspathResource.java:152:	The method 'isExists()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/AbstractClasspathResource.java:170:	The method 'getInputStream()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/AbstractClasspathResource.java:241:	The method 'dieOnCircularReference(Stack, Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/AbstractResourceCollectionWrapper.java:133:	The method 'isFilesystemOnly()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/AbstractResourceCollectionWrapper.java:159:	The method 'dieOnCircularReference(Stack, Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ArchiveResource.java:45:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Archives.java:95:	The method 'iterator()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Archives.java:107:	The method 'isFilesystemOnly()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Archives.java:136:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Archives.java:136:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/BCFileSet.java:34:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/BZip2Resource.java:39:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/BaseResourceCollectionContainer.java:48:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/BaseResourceCollectionContainer.java:186:	The method 'dieOnCircularReference(Stack, Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/BaseResourceCollectionContainer.java:224:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/BaseResourceCollectionContainer.java:224:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/CompressedResource.java:34:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ContentTransformingResource.java:41:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/FileResource.java:50:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/FileResourceIterator.java:42:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Files.java:44:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Files.java:395:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Files.java:395:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Files.java:483:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Files.java:484:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/GZipResource.java:39:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/JavaConstantResource.java:61:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/JavaConstantResource.java:63:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/JavaConstantResource.java:66:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/JavaConstantResource.java:68:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/JavaResource.java:38:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/JavaResource.java:60:	The method 'openInputStream(ClassLoader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/JavaResource.java:128:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Last.java:51:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/MappedResourceCollection.java:177:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/MappedResourceCollection.java:177:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/MultiRootFileSet.java:114:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/MultiRootFileSet.java:114:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/PropertyResource.java:51:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ResourceDecorator.java:44:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ResourceDecorator.java:196:	Ensure you override both equals() and hashCode()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ResourceDecorator.java:220:	The method 'dieOnCircularReference(Stack, Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ResourceList.java:48:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ResourceList.java:49:	Avoid using implementation types like 'ArrayList'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ResourceList.java:51:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ResourceList.java:255:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Resources.java:79:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Resources.java:134:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/StringResource.java:48:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/StringResource.java:161:	Ensure you override both equals() and hashCode()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/StringResource.java:226:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/TarResource.java:46:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Tokens.java:52:	The method 'getCollection()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:53:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:144:	The method 'getURL()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:168:	The method 'setRefid(Reference)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:181:	The method 'getName()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:193:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:202:	The method 'isExists()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:263:	The method 'getLastModified()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:277:	The method 'isDirectory()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:288:	The method 'getSize()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:303:	The method 'equals(Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:323:	The method 'hashCode()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:338:	The method 'getInputStream()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/URLResource.java:359:	The method 'getOutputStream()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/Union.java:49:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ZipResource.java:48:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ZipResource.java:86:	The method 'addConfigured(ResourceCollection)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ZipResource.java:115:	The method 'setRefid(Reference)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ZipResource.java:128:	The method 'getInputStream()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ZipResource.java:140:	The method 'close()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ZipResource.java:144:	The method 'finalize()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ZipResource.java:162:	The method 'getOutputStream()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/ZipResource.java:198:	The method 'fetchEntry()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/comparators/Content.java:62:	The method 'resourceCompare(Resource, Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/comparators/Date.java:36:	The method 'resourceCompare(Resource, Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/comparators/Exists.java:37:	The method 'resourceCompare(Resource, Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/comparators/FileSystem.java:45:	The method 'resourceCompare(Resource, Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/comparators/Name.java:34:	The method 'resourceCompare(Resource, Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/comparators/Reverse.java:42:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/comparators/Reverse.java:72:	The method 'resourceCompare(Resource, Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/comparators/Reverse.java:77:	The method 'dieOnCircularReference(Stack, Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/comparators/Size.java:36:	The method 'resourceCompare(Resource, Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/comparators/Type.java:38:	The method 'resourceCompare(Resource, Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/And.java:31:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/And.java:47:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Compare.java:101:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Compare.java:109:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Compare.java:127:	The method 'dieOnCircularReference(Stack, Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Date.java:135:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Date.java:153:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Exists.java:33:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/InstanceOf.java:105:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Majority.java:34:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Majority.java:58:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Majority.java:68:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Majority.java:73:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Name.java:123:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/None.java:32:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/None.java:48:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Not.java:33:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Not.java:62:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Or.java:31:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Or.java:47:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/ResourceSelectorContainer.java:41:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/ResourceSelectorContainer.java:122:	The method 'dieOnCircularReference(Stack, Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Size.java:68:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Type.java:52:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Type.java:78:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/resources/selectors/Type.java:102:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:63:	The method 'selectorCount()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:76:	The method 'getSelectors(Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:82:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:89:	The method 'selectorElements()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:104:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:114:	The method 'appendSelector(FileSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:154:	The method 'addSelector(SelectSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:162:	The method 'addAnd(AndSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:170:	The method 'addOr(OrSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:178:	The method 'addNot(NotSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:186:	The method 'addNone(NoneSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:194:	The method 'addMajority(MajoritySelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:202:	The method 'addDate(DateSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:210:	The method 'addSize(SizeSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:218:	The method 'addFilename(FilenameSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:226:	The method 'addCustom(ExtendSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:234:	The method 'addContains(ContainsSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:242:	The method 'addPresent(PresentSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:250:	The method 'addDepth(DepthSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:258:	The method 'addDepend(DependSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:266:	The method 'addDifferent(DifferentSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:274:	The method 'addType(TypeSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:282:	The method 'addContainsRegexp(ContainsRegexpSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:291:	The method 'addModified(ModifiedSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:348:	The method 'add(FileSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:352:	The method 'dieOnCircularReference(Stack, Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:368:	The method 'clone()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:368:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java:368:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AndSelector.java:35:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/AndSelector.java:55:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseExtendSelector.java:76:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelector.java:114:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:48:	The method 'hasSelectors()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:57:	The method 'selectorCount()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:67:	The method 'getSelectors(Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:69:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:76:	The method 'selectorElements()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:88:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:99:	The method 'appendSelector(FileSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:120:	The method 'validate()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:141:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:150:	The method 'addSelector(SelectSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:158:	The method 'addAnd(AndSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:166:	The method 'addOr(OrSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:174:	The method 'addNot(NotSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:182:	The method 'addNone(NoneSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:190:	The method 'addMajority(MajoritySelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:198:	The method 'addDate(DateSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:206:	The method 'addSize(SizeSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:214:	The method 'addFilename(FilenameSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:222:	The method 'addCustom(ExtendSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:230:	The method 'addContains(ContainsSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:238:	The method 'addPresent(PresentSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:246:	The method 'addDepth(DepthSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:254:	The method 'addDepend(DependSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:262:	The method 'addDifferent(DifferentSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:270:	The method 'addType(TypeSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:278:	The method 'addContainsRegexp(ContainsRegexpSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:287:	The method 'addModified(ModifiedSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:344:	The method 'add(FileSelector)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java:348:	The method 'dieOnCircularReference(Stack, Project)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java:63:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java:111:	The method 'setParameters(Parameter...)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java:135:	The method 'verifySettings()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java:149:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java:159:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java:187:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java:59:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java:107:	The method 'setParameters(Parameter...)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java:132:	The method 'verifySettings()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java:147:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java:158:	The method 'isSelected(Resource)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java:168:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java:180:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java:192:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DateSelector.java:65:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DateSelector.java:160:	The method 'setParameters(Parameter...)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DateSelector.java:198:	The method 'verifySettings()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DateSelector.java:232:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DateSelector.java:234:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DependSelector.java:36:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DependSelector.java:61:	The method 'selectionTest(File, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DepthSelector.java:52:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DepthSelector.java:80:	The method 'setParameters(Parameter...)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DepthSelector.java:110:	The method 'verifySettings()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DepthSelector.java:131:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/DifferentSelector.java:81:	The method 'selectionTest(File, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ExecutableSelector.java:36:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ExtendSelector.java:153:	The method 'verifySettings()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ExtendSelector.java:183:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/ExtendSelector.java:189:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/FilenameSelector.java:57:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/FilenameSelector.java:125:	The method 'setParameters(Parameter...)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/FilenameSelector.java:151:	The method 'verifySettings()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/FilenameSelector.java:171:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/MajoritySelector.java:42:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/MajoritySelector.java:74:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/NoneSelector.java:36:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/NoneSelector.java:56:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/NotSelector.java:35:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/NotSelector.java:51:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/NotSelector.java:65:	The method 'verifySettings()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/OrSelector.java:35:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/OrSelector.java:55:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/OwnedBySelector.java:72:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/PosixGroupSelector.java:72:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/PosixPermissionsSelector.java:82:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SelectSelector.java:45:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java:281:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java:282:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java:294:	Avoid using a branching statement as the last in a loop.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java:436:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java:437:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java:449:	Avoid using a branching statement as the last in a loop.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java:488:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java:501:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SizeSelector.java:70:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SizeSelector.java:195:	The method 'verifySettings()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SizeSelector.java:251:	The method 'getValues()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/SymlinkSelector.java:35:	The method 'isSelected(File, String, File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/TokenizedPattern.java:92:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/TokenizedPattern.java:105:	The method 'equals(Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/TokenizedPattern.java:110:	The method 'hashCode()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/TypeSelector.java:41:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/ChecksumAlgorithm.java:128:	Avoid empty while statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/DigestAlgorithm.java:165:	Avoid empty while statements
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/EqualComparator.java:41:	The method 'compare(Object, Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/EqualComparator.java:48:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/EqualComparator.java:55:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/HashvalueAlgorithm.java:42:	The method 'isValid()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/HashvalueAlgorithm.java:55:	The method 'getValue(File)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/HashvalueAlgorithm.java:76:	The method 'toString()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java:236:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java:236:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java:417:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java:462:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java:493:	Avoid unused method parameters such as 'cacheKey'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java:765:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/PropertiesfileCache.java:83:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/types/selectors/modifiedselector/PropertiesfileCache.java:121:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/Base64Converter.java:94:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/CollectionUtils.java:55:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/CollectionUtils.java:55:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/CollectionUtils.java:72:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/CollectionUtils.java:224:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/CompositeMapper.java:30:	The method 'mapFileName(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ConcatFileInputStream.java:115:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ContainerMapper.java:67:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ContainerMapper.java:83:	Use equals() to compare object references.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DOMElementWriter.java:127:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DOMElementWriter.java:208:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DOMElementWriter.java:518:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DOMUtils.java:36:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DateUtils.java:213:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DateUtils.java:215:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DateUtils.java:218:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DeweyDecimal.java:111:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DeweyDecimal.java:112:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DeweyDecimal.java:155:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DeweyDecimal.java:156:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DeweyDecimal.java:180:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DeweyDecimal.java:181:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DeweyDecimal.java:215:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/DeweyDecimal.java:216:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:135:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:281:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:311:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:446:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:482:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:520:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:560:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:644:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:645:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:681:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:683:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:816:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:1184:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:1215:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:1437:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:1567:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:1585:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FileUtils.java:1627:	Do not explicitly trigger a garbage collection.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FlatFileNameMapper.java:38:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/FlatFileNameMapper.java:46:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/GlobPatternMapper.java:163:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/GlobPatternMapper.java:164:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/GlobPatternMapper.java:167:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/GlobPatternMapper.java:199:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/IdentityMapper.java:35:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/IdentityMapper.java:43:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/IdentityStack.java:54:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JAXPUtils.java:44:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:147:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:198:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:198:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:207:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:207:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:214:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:214:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:221:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:221:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:228:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:228:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:284:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:513:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/JavaEnvUtils.java:563:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/KeepAliveInputStream.java:53:	The method 'close()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/KeepAliveOutputStream.java:53:	The method 'close()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java:216:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java:216:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java:288:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java:708:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java:708:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LazyFileOutputStream.java:23:	No need to import a type that lives in the same package
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LazyHashtable.java:38:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LazyHashtable.java:58:	The method 'elements()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LazyHashtable.java:67:	The method 'isEmpty()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LazyHashtable.java:76:	The method 'size()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LazyHashtable.java:86:	The method 'contains(Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LazyHashtable.java:96:	The method 'containsKey(Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LazyHashtable.java:106:	The method 'containsValue(Object)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LazyHashtable.java:114:	The method 'keys()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LineOrientedOutputStream.java:63:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LineOrientedOutputStream.java:71:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LineTokenizer.java:56:	The method 'getToken(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LinkedHashtable.java:44:	Avoid using implementation types like 'LinkedHashMap'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LinkedHashtable.java:62:	The method 'clear()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LoaderUtils.java:31:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/LoaderUtils.java:80:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/MergingMapper.java:34:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/MergingMapper.java:50:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/Native2AsciiUtils.java:25:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/OutputStreamFunneler.java:163:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/PermissionUtils.java:42:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/PermissionUtils.java:58:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/PermissionUtils.java:61:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/PermissionUtils.java:64:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ProcessUtil.java:26:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ProcessUtil.java:51:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ProcessUtil.java:61:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ReaderInputStream.java:83:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ReaderInputStream.java:153:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ReflectUtil.java:36:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/RegexpPatternMapper.java:40:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/RegexpPatternMapper.java:48:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/RegexpPatternMapper.java:145:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:64:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:292:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:329:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:369:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:379:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:381:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:408:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:410:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:459:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:640:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:648:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:675:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:694:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:703:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:730:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ResourceUtils.java:763:	Logger calls should be surrounded by log level guards.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ScriptFixBSFPath.java:109:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/ScriptRunnerBase.java:79:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/StreamUtils.java:28:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/StringTokenizer.java:86:	The method 'getToken(Reader)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/StringUtils.java:57:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/StringUtils.java:68:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/StringUtils.java:167:	A switch statement does not contain a break
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/StringUtils.java:221:	A switch statement does not contain a break
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java:60:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java:261:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java:288:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/UnicodeUtil.java:25:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/UnicodeUtil.java:35:	The static method name 'EscapeUnicode' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/VectorSet.java:43:	Avoid using implementation types like 'HashSet'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/VectorSet.java:145:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/Watchdog.java:49:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/WorkerAnt.java:40:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/WorkerAnt.java:41:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/WorkerAnt.java:42:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/WorkerAnt.java:151:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/WorkerAnt.java:160:	The method 'run()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/WorkerAnt.java:165:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/XmlConstants.java:29:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/XmlConstants.java:29:	The utility class name 'XmlConstants' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/depend/AbstractAnalyzer.java:45:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/depend/AbstractAnalyzer.java:51:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/depend/AbstractAnalyzer.java:53:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/depend/AbstractAnalyzer.java:248:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/depend/AbstractAnalyzer.java:248:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/depend/bcel/AncestorAnalyzer.java:52:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/depend/bcel/AncestorAnalyzer.java:110:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/depend/bcel/FullAnalyzer.java:52:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/depend/bcel/FullAnalyzer.java:100:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/facade/FacadeTaskHelper.java:105:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/optional/JavaxScriptRunner.java:93:	The method 'evaluateScript(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/optional/JavaxScriptRunner.java:171:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/optional/ScriptRunner.java:75:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java:50:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java:64:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java:65:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/regexp/RegexpMatcher.java:86:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/regexp/RegexpMatcher.java:108:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java:90:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java:106:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/ant/util/regexp/RegexpUtil.java:26:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:37:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:38:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:39:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:40:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:41:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:42:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:43:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:44:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:45:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:45:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:46:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BZip2Constants.java:55:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:164:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:280:	The local variable name 'ec_tmp' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:291:	The local variable name 'ec_tmp' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:349:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:372:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:373:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:481:	The local variable name 'H' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:481:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:560:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:605:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:630:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:630:	Avoid modifying an outer loop incrementer in an inner loop for update expression
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:630:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:630:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:651:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:669:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:669:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:669:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:682:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:685:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:689:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:699:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:709:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:719:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:758:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:759:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:766:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:787:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:787:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:787:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:801:	The final local variable name 'stack_ll' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:802:	The final local variable name 'stack_hh' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:803:	The final local variable name 'stack_dd' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:811:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:816:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:816:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:874:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:874:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:875:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:877:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:877:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:878:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:903:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:904:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:919:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:929:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:931:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:962:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:1004:	The final local variable name 'ftab_sb' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:1011:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:1027:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:1027:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:1028:	The final local variable name 'fmap_j' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:1031:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/BlockSort.java:1036:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:90:	Perhaps 'computedBlockCRC' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:202:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:202:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:202:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:206:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:476:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:484:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:493:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:498:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:527:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:558:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:579:	The final local variable name 'len_t' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:607:	The final local variable name 'len_t' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:608:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:646:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:659:	The local variable name 'base_zt' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:660:	The local variable name 'limit_zt' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:661:	The local variable name 'perm_zt' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:662:	The local variable name 'minLens_zt' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:732:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:810:	The final local variable name 'limit_zt' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:849:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:854:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:879:	The local variable name 'su_ch2Shadow' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:883:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:904:	The local variable name 'su_ch2Shadow' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:924:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:929:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:964:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:976:	The local variable name 'su_ch2Shadow' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2InputStream.java:1035:	Unnecessary modifier 'final' on method 'initTT': the method is already in a final class
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:146:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:153:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:231:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:276:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:277:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:306:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:307:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:323:	The final local variable name 'weight_n1' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:324:	The final local variable name 'weight_n2' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:325:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:328:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:330:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:331:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:341:	The final local variable name 'weight_tmp' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:356:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:356:	The local variable name 'parent_k' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:388:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:431:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:432:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:461:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:462:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:478:	The final local variable name 'weight_n1' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:479:	The final local variable name 'weight_n2' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:482:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:484:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:485:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:494:	The final local variable name 'weight_tmp' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:507:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:507:	The local variable name 'parent_k' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:550:	Perhaps 'blockCRC' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:574:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:575:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:641:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:785:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:889:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:960:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:961:	The local variable name 'len_t' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:962:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:969:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1019:	The final local variable name 'len_np' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1020:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1041:	The final local variable name 'len_0' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1042:	The final local variable name 'len_1' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1043:	The final local variable name 'len_2' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1044:	The final local variable name 'len_3' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1045:	The final local variable name 'len_4' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1046:	The final local variable name 'len_5' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1052:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1055:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1100:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1106:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1117:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1117:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1118:	The final local variable name 'cost_t' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1132:	The final local variable name 'rfreq_bt' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1157:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1162:	The final local variable name 'll_i' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1185:	The final local variable name 'len_t' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1186:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1207:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1210:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1259:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1293:	The local variable name 'len_t' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1364:	The final local variable name 'selector_selCtr' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1365:	The final local variable name 'code_selCtr' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1366:	The final local variable name 'len_selCtr' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1369:	The final local variable name 'sfmap_i' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1439:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1447:	The final local variable name 'll_i' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java:1568:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CRC.java:132:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/bzip2/CRC.java:134:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/mail/MailMessage.java:117:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/mail/MailMessage.java:120:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/mail/MailMessage.java:123:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/mail/MailMessage.java:313:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/mail/MailMessage.java:456:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/mail/MailMessage.java:463:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarBuffer.java:47:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarBuffer.java:50:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarBuffer.java:126:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarBuffer.java:171:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarBuffer.java:227:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarBuffer.java:354:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarBuffer.java:394:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:38:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:43:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:48:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:53:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:58:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:63:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:69:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:69:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:74:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:80:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:86:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:86:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:89:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:93:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:98:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:101:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:106:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:111:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:116:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:121:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:126:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:132:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:138:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:144:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:150:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:156:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:162:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:168:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:174:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:180:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:186:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:192:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:198:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:203:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:208:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:213:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:218:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:223:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:228:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:233:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:238:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:243:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:248:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:253:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:260:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:265:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:270:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:272:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:277:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:278:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:283:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:285:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:286:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarConstants.java:291:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarEntry.java:167:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarEntry.java:170:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarEntry.java:333:	The method name and parameter number are suspiciously close to equals(Object)
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarEntry.java:831:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarEntry.java:917:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarEntry.java:975:	A switch statement does not contain a break
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarEntry.java:1024:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarEntry.java:1025:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarEntry.java:1096:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarInputStream.java:218:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarInputStream.java:237:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarInputStream.java:244:	Document empty method body
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarInputStream.java:484:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarInputStream.java:588:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarOutputStream.java:313:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarOutputStream.java:597:	Avoid unused method parameters such as 'additionalMsg'.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarUtils.java:38:	A class which only has private constructors should be final
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarUtils.java:49:	The method 'canEncode(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarUtils.java:53:	The method 'encode(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarUtils.java:64:	The method 'decode(byte)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarUtils.java:267:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/tar/TarUtils.java:327:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AbstractUnicodeExtraField.java:33:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AbstractUnicodeExtraField.java:126:	The method 'getCentralDirectoryData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AbstractUnicodeExtraField.java:139:	The method 'getCentralDirectoryLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AbstractUnicodeExtraField.java:147:	The method 'getLocalFileDataData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AbstractUnicodeExtraField.java:152:	The method 'getLocalFileDataLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AbstractUnicodeExtraField.java:157:	The method 'parseFromLocalFileData(byte, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AsiExtraField.java:97:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AsiExtraField.java:97:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AsiExtraField.java:105:	The method 'getHeaderId()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AsiExtraField.java:115:	The method 'getLocalFileDataLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AsiExtraField.java:130:	The method 'getCentralDirectoryLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AsiExtraField.java:140:	The method 'getLocalFileDataData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AsiExtraField.java:173:	The method 'getCentralDirectoryData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AsiExtraField.java:292:	The method 'parseFromLocalFileData(byte, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AsiExtraField.java:342:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/AsiExtraField.java:342:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ExtraFieldUtils.java:32:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ExtraFieldUtils.java:66:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ExtraFieldUtils.java:68:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ExtraFieldUtils.java:70:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ExtraFieldUtils.java:141:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ExtraFieldUtils.java:143:	A switch statement does not contain a break
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ExtraFieldUtils.java:178:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ExtraFieldUtils.java:180:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ExtraFieldUtils.java:212:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ExtraFieldUtils.java:245:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/FallbackZipEncoding.java:66:	The method 'canEncode(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/FallbackZipEncoding.java:73:	The method 'encode(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/FallbackZipEncoding.java:84:	The method 'decode(byte)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/GeneralPurposeBit.java:57:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/GeneralPurposeBit.java:57:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/GeneralPurposeBit.java:204:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/JarMarker.java:37:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/JarMarker.java:53:	The method 'getHeaderId()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/JarMarker.java:62:	The method 'getLocalFileDataLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/JarMarker.java:71:	The method 'getCentralDirectoryLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/JarMarker.java:81:	The method 'getLocalFileDataData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/JarMarker.java:90:	The method 'getCentralDirectoryData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/JarMarker.java:102:	The method 'parseFromLocalFileData(byte, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/NioZipEncoding.java:56:	The method 'canEncode(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/NioZipEncoding.java:67:	The method 'encode(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/NioZipEncoding.java:113:	The method 'decode(byte)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Simple8BitZipEncoding.java:61:	The method 'compareTo(Simple8BitChar)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Simple8BitZipEncoding.java:217:	The method 'canEncode(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Simple8BitZipEncoding.java:234:	The method 'encode(String)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Simple8BitZipEncoding.java:258:	The method 'decode(byte)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnicodeCommentExtraField.java:35:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnicodeCommentExtraField.java:65:	The method 'getHeaderId()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnicodePathExtraField.java:34:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnicodePathExtraField.java:63:	The method 'getHeaderId()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:33:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:33:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:39:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:39:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:45:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:45:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:51:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:51:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:63:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:63:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:69:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:69:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:75:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnixStat.java:75:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnparseableExtraFieldData.java:44:	The method 'getHeaderId()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnparseableExtraFieldData.java:53:	The method 'getLocalFileDataLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnparseableExtraFieldData.java:62:	The method 'getCentralDirectoryLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnparseableExtraFieldData.java:73:	The method 'getLocalFileDataData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnparseableExtraFieldData.java:82:	The method 'getCentralDirectoryData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnparseableExtraFieldData.java:94:	The method 'parseFromLocalFileData(byte, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnparseableExtraFieldData.java:106:	The method 'parseFromCentralDirectoryData(byte, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnrecognizedExtraField.java:51:	The method 'getHeaderId()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnrecognizedExtraField.java:76:	The method 'getLocalFileDataLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnrecognizedExtraField.java:84:	The method 'getLocalFileDataData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnrecognizedExtraField.java:109:	The method 'getCentralDirectoryLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnrecognizedExtraField.java:120:	The method 'getCentralDirectoryData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnrecognizedExtraField.java:133:	The method 'parseFromLocalFileData(byte, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/UnrecognizedExtraField.java:144:	The method 'parseFromCentralDirectoryData(byte, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Zip64ExtendedInformationExtraField.java:51:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Zip64ExtendedInformationExtraField.java:68:	Document empty constructor
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Zip64ExtendedInformationExtraField.java:102:	The method 'getHeaderId()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Zip64ExtendedInformationExtraField.java:107:	The method 'getLocalFileDataLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Zip64ExtendedInformationExtraField.java:112:	The method 'getCentralDirectoryLength()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Zip64ExtendedInformationExtraField.java:120:	The method 'getLocalFileDataData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Zip64ExtendedInformationExtraField.java:133:	The method 'getCentralDirectoryData()' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Zip64ExtendedInformationExtraField.java:148:	The method 'parseFromLocalFileData(byte, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/Zip64ExtendedInformationExtraField.java:178:	The method 'parseFromCentralDirectoryData(byte, int, int)' is missing an @Override annotation.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipConstants.java:23:	The utility class name 'ZipConstants' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipEightByteInteger.java:179:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipEncodingHelper.java:71:	The final local variable name 'cp437_high_chars' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipEncodingHelper.java:103:	The final local variable name 'cp850_high_chars' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipEntry.java:178:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipEntry.java:178:	clone() method should throw CloneNotSupportedException
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipEntry.java:263:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipEntry.java:319:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipEntry.java:470:	This call to Collection.toArray() may be optimizable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipEntry.java:680:	Return an empty array rather than null.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipFile.java:134:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipFile.java:224:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipFile.java:263:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipFile.java:924:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipFile.java:1006:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipLong.java:150:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipLong.java:185:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipOutputStream.java:517:	The final local variable name 'NUM_PER_WRITE' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipOutputStream.java:522:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipOutputStream.java:841:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipOutputStream.java:1430:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipOutputStream.java:1568:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipShort.java:115:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipShort.java:150:	The return type of the clone() method must be the class name when implements Cloneable
/Users/danikgan/Desktop/ant/src/main/org/apache/tools/zip/ZipUtil.java:214:	Return an empty array rather than null.
/Users/danikgan/Desktop/ant/src/tests/antunit/taskdefs/javac-dir/good-src/Simple.java:19:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tests/antunit/taskdefs/optional/junit/src/ExampleTest.java:19:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/AntAssert.java:31:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/AntAssert.java:31:	The utility class name 'AntAssert' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/AntAssert.java:40:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/AntAssert.java:62:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/AntClassLoaderDelegationTest.java:107:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java:251:	Overriding method merely calls super
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileRule.java:66:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileRule.java:67:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileRule.java:68:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileRule.java:69:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileRule.java:219:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileRule.java:247:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileRule.java:256:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileRule.java:264:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileRule.java:273:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileRule.java:281:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileRule.java:290:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileTest.java:44:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileTest.java:45:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileTest.java:46:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileTest.java:47:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileTest.java:524:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileTest.java:552:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/BuildFileTest.java:561:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java:256:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java:280:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java:290:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java:459:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyMailServer.java:40:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyMailServer.java:41:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyMailServer.java:102:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyMailServer.java:112:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyMailServer.java:141:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyMailServer.java:149:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyMailServer.java:157:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyMailServer.java:165:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskAbstract.java:21:	No need to import a type that lives in the same package
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskAbstract.java:25:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskAbstract.java:25:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskAbstract.java:28:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskOk.java:21:	No need to import a type that lives in the same package
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskOk.java:25:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskOk.java:25:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskOk.java:28:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskOkNonTask.java:23:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskOkNonTask.java:23:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskOkNonTask.java:26:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithNonPublicExecute.java:23:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithNonPublicExecute.java:23:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithNonPublicExecute.java:26:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithNonVoidExecute.java:23:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithNonVoidExecute.java:23:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithoutDefaultConstructor.java:21:	No need to import a type that lives in the same package
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithoutDefaultConstructor.java:25:	Avoid unused constructor parameters such as 'dummy'.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithoutDefaultConstructor.java:25:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithoutDefaultConstructor.java:28:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithoutExecute.java:23:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithoutExecute.java:23:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithoutExecute.java:26:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithoutPublicConstructor.java:21:	No need to import a type that lives in the same package
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithoutPublicConstructor.java:25:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/DummyTaskWithoutPublicConstructor.java:28:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ExecutorTest.java:46:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ExecutorTest.java:60:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ExecutorTest.java:63:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ExecutorTest.java:66:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ExecutorTest.java:69:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ExecutorTest.java:72:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ExecutorTest.java:75:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/FileUtilities.java:30:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/FileUtilities.java:30:	The utility class name 'FileUtilities' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:310:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:313:	Return an empty array rather than null.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:329:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:332:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:339:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:342:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:345:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:671:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:674:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:677:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:680:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:773:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:823:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java:828:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/MagicTestNames.java:25:	The utility class name 'MagicTestNames' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/MockBuildListener.java:29:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/MockBuildListener.java:36:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/MockBuildListener.java:39:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/MockBuildListener.java:42:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/MockBuildListener.java:45:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/MockBuildListener.java:48:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/MockBuildListener.java:51:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:70:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:292:	The final local variable name 'BAR' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:292:	The final local variable name 'FOO' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:292:	Use one line for each declaration, it enhances code readability.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:294:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:297:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:300:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:303:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:306:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:309:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:342:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:345:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:350:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:353:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:358:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/ProjectTest.java:361:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/PropertyFileCLITest.java:66:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/TaskContainerTest.java:42:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/TaskContainerTest.java:44:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/TestHelper.java:27:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/TestHelper.java:39:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/UnknownElementTest.java:59:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/UnknownElementTest.java:62:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/UnknownElementTest.java:65:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/UnknownElementTest.java:68:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/UnknownElementTest.java:79:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/filters/HeadTailTest.java:76:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/filters/ReplaceTokensTest.java:65:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java:287:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntStructureTest.java:83:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntStructureTest.java:84:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:390:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:393:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:396:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:399:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:402:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:405:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:440:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:443:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:446:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:449:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:452:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:455:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:467:	Avoid assignments in operands
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:568:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:571:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:574:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:577:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:580:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java:583:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntlibTest.java:78:	The JUnit 4 test method name 'testAntlib_uri' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntlibTest.java:84:	The JUnit 4 test method name 'testAntlib_uri_auto' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/AntlibTest.java:90:	The JUnit 4 test method name 'testAntlib_uri_auto2' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java:216:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/DynamicTask.java:26:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ExecStreamRedirectorTest.java:63:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ExecTaskTest.java:58:	Use of modifier volatile is not recommended.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ExecTaskTest.java:164:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ExecTaskTest.java:167:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ExecTaskTest.java:170:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ExecTaskTest.java:179:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ExecTaskTest.java:182:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ExecTaskTest.java:185:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JarTest.java:262:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java:373:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java:484:	Unnecessary use of fully qualified name 'Assume.assumeTrue' due to existing static import 'org.junit.Assume.assumeTrue'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java:491:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java:525:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java:538:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java:553:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java:562:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java:587:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/MakeUrlTest.java:121:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ManifestClassPathTest.java:235:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/MultiMapTest.java:71:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/MultiMapTest.java:71:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/MultiMapTest.java:74:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/MultiMapTest.java:77:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/MultiMapTest.java:80:	The final method parameter name 'source_file_name' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/PreSetDefTest.java:144:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/PreSetDefTest.java:146:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java:146:	The JUnit 4 test method name 'XtestWlrmic' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java:155:	The JUnit 4 test method name 'XtestWlrmicJArg' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java:269:	The JUnit 4 test method name 'NotestFailingAdapter' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SQLExecTest.java:197:	A switch statement does not contain a break
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SubAntTest.java:95:	The JUnit 4 test method name 'testMultipleTargetsOneDoesntExist_FOEfalse' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SubAntTest.java:102:	The JUnit 4 test method name 'testMultipleTargetsOneDoesntExist_FOEtrue' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SubAntTest.java:128:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SubAntTest.java:131:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SubAntTest.java:134:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SubAntTest.java:137:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SubAntTest.java:140:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SubAntTest.java:143:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SyncTest.java:91:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SyncTest.java:103:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/SyncTest.java:117:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/TimeProcess.java:26:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/TouchTest.java:202:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/TypeAdapterTest.java:135:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/TypeAdapterTest.java:160:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/TypeAdapterTest.java:160:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/TypeAdapterTest.java:162:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/XmlPropertyTest.java:233:	Position literals first in String comparisons
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/XmlPropertyTest.java:261:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/XmlPropertyTest.java:269:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/XmlPropertyTest.java:281:	Avoid unused method parameters such as 'localRoot'.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/XmlPropertyTest.java:283:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/XmlPropertyTest.java:335:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ZipTest.java:101:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ZipTest.java:235:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ZipTest.java:244:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ZipTest.java:253:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/ZipTest.java:262:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java:50:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java:75:	Overriding method merely calls super
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java:89:	Overriding method merely calls super
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/condition/IsReachableTest.java:87:	The JUnit 4 test method name 'NotestFile' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/condition/ParserSupportsTest.java:78:	The JUnit 4 test method name 'NotestPropertyInvalid' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/condition/ParserSupportsTest.java:84:	The JUnit 4 test method name 'NotestXercesProperty' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriterTest.java:63:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriterTest.java:66:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriterTest.java:74:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriterTest.java:77:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriterTest.java:80:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriterTest.java:83:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriterTest.java:86:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriterTest.java:89:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriterTest.java:92:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriterTest.java:95:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/Native2AsciiTest.java:49:	The JUnit 4 test method name 'testIso8859_1' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/RpmTest.java:66:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/TraXLiaisonTest.java:96:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/TraXLiaisonTest.java:128:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/depend/DependTest.java:155:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitReportTest.java:203:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitReportTest.java:227:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java:145:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java:169:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java:651:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunnerTest.java:196:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunnerTest.java:198:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunnerTest.java:200:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunnerTest.java:202:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunnerTest.java:204:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunnerTest.java:206:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunnerTest.java:208:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunnerTest.java:274:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunnerTest.java:303:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitVersionHelperTest.java:79:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/NoVmCrash.java:27:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/SuiteMethodTest.java:27:	The utility class name 'SuiteMethodTest' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/TestFormatter.java:46:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/TestFormatter.java:46:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/TestFormatter.java:52:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/TestFormatter.java:57:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/TestFormatter.java:62:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/TestFormatter.java:67:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/TestFormatter.java:72:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/TestFormatter.java:77:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/TestFormatter.java:82:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/TestFormatter.java:87:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/TestFormatter.java:105:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/XMLResultAggregatorTest.java:48:	Non-static initializers are confusing
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/XMLResultAggregatorTest.java:89:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java:108:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java:478:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java:690:	The class name 'myFTP' doesn't match '[A-Z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java:695:	Overriding method merely calls super
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java:701:	The class name 'myRetryableFTP' doesn't match '[A-Z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java:727:	The class name 'oneFailureFTP' doesn't match '[A-Z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java:733:	The class name 'twoFailureFTP' doesn't match '[A-Z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java:739:	The class name 'threeFailureFTP' doesn't match '[A-Z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java:745:	The class name 'randomFailureFTP' doesn't match '[A-Z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/taskdefs/optional/splash/SplashScreenTest.java:31:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/DirSetTest.java:47:	getInstance method always creates a new object and hence does not comply to Singleton Design Pattern behaviour. Please review
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/EnumeratedAttributeTest.java:42:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/EnumeratedAttributeTest.java:43:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/EnumeratedAttributeTest.java:47:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/EnumeratedAttributeTest.java:88:	Return an empty array rather than null.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/FileSetTest.java:42:	getInstance method always creates a new object and hence does not comply to Singleton Design Pattern behaviour. Please review
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/RedirectorElementTest.java:44:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/TarFileSetTest.java:39:	getInstance method always creates a new object and hence does not comply to Singleton Design Pattern behaviour. Please review
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/ZipFileSetTest.java:38:	getInstance method always creates a new object and hence does not comply to Singleton Design Pattern behaviour. Please review
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java:141:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/resources/MultiRootFileSetTest.java:46:	getInstance method always creates a new object and hence does not comply to Singleton Design Pattern behaviour. Please review
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/selectors/BaseSelectorTest.java:184:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/selectors/BaseSelectorTest.java:204:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/selectors/BaseSelectorTest.java:282:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java:229:	Switch statements should have a default label
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java:920:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java:979:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java:996:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/selectors/OwnedBySelectorTest.java:48:	This final field could be made static
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/selectors/PosixGroupSelectorTest.java:29:	This final field could be made static
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/selectors/PosixGroupSelectorTest.java:40:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/types/selectors/PosixGroupSelectorTest.java:47:	A catch statement should never catch throwable since it includes errors.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:42:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:47:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:48:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:53:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:54:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:59:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:60:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:71:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:76:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:77:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:82:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:83:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:88:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:89:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:96:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/CollectionUtilsTest.java:97:	Use assertEquals(x, y) instead of assertTrue(x.equals(y))
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/DeweyDecimalTest.java:70:	Do not hard code the IP address 
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java:61:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java:365:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java:378:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java:383:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java:399:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java:592:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java:594:	Avoid empty if statements
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/JavaEnvUtilsTest.java:59:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/JavaEnvUtilsTest.java:71:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/JavaEnvUtilsTest.java:101:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/JavaEnvUtilsTest.java:108:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:73:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:74:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:173:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:174:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:175:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:177:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:178:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:179:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:197:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:218:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:219:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:247:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:248:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:251:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LayoutPreservingPropertiesTest.java:252:	Useless parentheses.
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/LinkedHashtableTest.java:45:	Avoid using implementation types like 'Hashtable'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/PermissionUtilsTest.java:55:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/ResourceUtilsTest.java:58:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/ResourceUtilsTest.java:61:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/StringUtilsTest.java:130:	The final local variable name 'KILOBYTE' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/StringUtilsTest.java:131:	The final local variable name 'MEGABYTE' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/StringUtilsTest.java:132:	The final local variable name 'GIGABYTE' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/StringUtilsTest.java:133:	The final local variable name 'TERABYTE' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/StringUtilsTest.java:134:	The final local variable name 'PETABYTE' doesn't match '[a-z][a-zA-Z0-9]*'
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/regexp/JakartaRegexpMatcherTest.java:53:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/ant/util/regexp/JakartaRegexpRegexpTest.java:53:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java:48:	Avoid empty catch blocks
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java:432:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java:433:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java:434:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java:435:	Avoid using implementation types like 'Vector'; use the interface instead
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/mail/MailMessageTest.java:449:	New exception is thrown in catch block, original stack trace may be lost
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:54:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:55:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:57:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:59:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:67:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:74:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:84:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:103:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:112:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:123:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:133:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:145:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:154:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:167:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/AsiExtraFieldTest.java:179:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java:56:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java:90:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java:108:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java:120:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java:139:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java:151:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:46:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:98:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:145:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:181:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:183:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:186:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:188:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:193:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:195:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:198:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:200:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/apache/tools/zip/ZipEntryTest.java:218:	Do not start a literal by 0 unless its an octal value
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junit/AbstractJUnit3TestMissed.java:24:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junit/AbstractJUnit3TestNotMissed.java:24:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junit/AbstractTestMissed.java:26:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junit/AbstractTestNotMissed.java:25:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junit/TestWithSuiteNotMissed.java:23:	The utility class name 'TestWithSuiteNotMissed' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junitlauncher/Tracker.java:47:	Avoid unused private fields such as 'context'.
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junitlauncher/Tracker.java:47:	Perhaps 'context' could be replaced by a local variable.
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junitlauncher/jupiter/JupiterSampleTest.java:37:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junitlauncher/jupiter/JupiterSampleTest.java:41:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junitlauncher/jupiter/JupiterSampleTest.java:57:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junitlauncher/jupiter/JupiterSampleTest.java:61:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/junitlauncher/jupiter/JupiterSampleTest.java:65:	Document empty method body
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/tasks/TaskdefTestContainerTask.java:24:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/tasks/TaskdefTestContainerTask.java:24:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/tasks/TaskdefTestSimpleTask.java:27:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/tasks/TaskdefTestSimpleTask.java:37:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/tests/junit/org/example/tasks/TaskdefTestSimpleTask.java:37:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tutorial/hello-world/01-simple/src/oata/HelloWorld.java:20:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tutorial/hello-world/02-logging/src/oata/HelloWorld.java:23:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tutorial/hello-world/03-testing/src/oata/HelloWorld.java:22:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tutorial/hello-world/03-testing/src/oata/HelloWorldTest.java:27:	Document empty method body
/Users/danikgan/Desktop/ant/src/tutorial/hello-world/final/src/oata/HelloWorld.java:22:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
/Users/danikgan/Desktop/ant/src/tutorial/hello-world/final/src/oata/HelloWorldTest.java:27:	Document empty method body
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/01-propertyaccess/src/Find.java:21:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/01-propertyaccess/src/Find.java:44:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/01-propertyaccess/src/Find.java:45:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/01-propertyaccess/src/FindTest.java:25:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/02-fileset/src/Find.java:27:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/02-fileset/src/Find.java:46:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/02-fileset/src/Find.java:47:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/02-fileset/src/Find.java:48:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/02-fileset/src/Find.java:48:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/02-fileset/src/Find.java:67:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/02-fileset/src/FindTest.java:29:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/03-paths/src/Find.java:25:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/03-paths/src/Find.java:44:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/03-paths/src/Find.java:45:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/03-paths/src/Find.java:46:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/03-paths/src/Find.java:46:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/03-paths/src/Find.java:62:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/03-paths/src/FindTest.java:29:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/04-lists/src/Find.java:25:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/04-lists/src/Find.java:57:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/04-lists/src/Find.java:58:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/04-lists/src/Find.java:59:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/04-lists/src/Find.java:93:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/04-lists/src/FindTest.java:29:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/final/src/Find.java:27:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/final/src/Find.java:59:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/final/src/Find.java:60:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/final/src/Find.java:61:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/final/src/Find.java:98:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-filesets-properties/final/src/FindTest.java:32:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-start-writing/src/HelloWorld.java:30:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-start-writing/src/HelloWorld.java:54:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-start-writing/src/HelloWorld.java:57:	This statement should have braces
/Users/danikgan/Desktop/ant/src/tutorial/tasks-start-writing/src/HelloWorld.java:77:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tutorial/tasks-start-writing/src/HelloWorld.java:79:	Avoid unnecessary constructors - the compiler will generate these for you
/Users/danikgan/Desktop/ant/src/tutorial/tasks-start-writing/src/HelloWorld.java:79:	Document empty constructor
/Users/danikgan/Desktop/ant/src/tutorial/tasks-start-writing/src/HelloWorldTest.java:28:	All classes and interfaces must belong to a named package
/Users/danikgan/Desktop/ant/src/tests/antunit/taskdefs/javac-dir/bad-src/Bad.java	-	Error while processing /Users/danikgan/Desktop/ant/src/tests/antunit/taskdefs/javac-dir/bad-src/Bad.java
